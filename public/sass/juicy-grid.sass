#hs-framework
	width: $max_page_width
	margin: auto
	position: relative
	@media #{$media_bp_l}
		width: 100%
		float: left

	.hs-content-container
		width: 100%
		padding: $client_content_padding
		background: $client_content_bg
		+box-sizing(border-box)
		@media #{$media_bp_l}
			padding: $client_content_padding/2
		@media #{$media_bp_m}
			padding: $client_content_padding/3
		@media #{$media_bp_s}
			padding: $client_content_padding/4
.hs-row
	position: relative
	float: left
	width: 100%
	margin: $client_row_gutter 0 0 0
	// &:not(.hs-row-square)
	+flexbox()
	+flex-direction(row)
	+flex-wrap(wrap)
	+justify-content(space-between)

	.hs-col
		position: relative
		float: left
		overflow: hidden
		margin-bottom: $client_row_gutter

	&.hs-row-square
		.hs-col
			height: 320.828px // 328.328px
		.entrylist .video,
		.module-image-slideshow .item
			margin-bottom: $client_row_gutter
			// @media (min-width: #{$max_page_width} + 1)
			width: calc((100% / 12) * 6 - #{$client_col_gutter})
			height: 320.828px // 328.328px

			// .entrylist .video,
		.module-image-slideshow .item
			height: 240px
			line-height: 240px

		@media (max-width: #{$max_page_width})
			.hs-col
				//width: calc(100vw - $client_col_gutter)
				height: calc(100vw - #{$client_col_gutter})
			.entrylist .video
				width: calc((100vw / 12) * 4 - #{$client_col_gutter})
				height: calc((100vw / 12) * 4 - #{$client_col_gutter})
				@media #{$media_bp_m}
					width: calc((100vw / 12) * 6 - #{$client_col_gutter})
					height: calc((100vw / 12) * 6 - #{$client_col_gutter})
			.module-image-slideshow .item
				width: calc((100vw / 12) * 4 - 10px)
				line-height: calc((((100vw / 12) * 4 - 10px) / 4) * 3)

				height: calc((((100vw / 12) * 4 - 10px) / 4) * 3)
				@media #{$media_bp_m}
					height: calc( (((100vw / 12) * 6 - 10px) / 4 ) * 3)
					width: calc((100vw / 12) * 6 - 10px)
					line-height: calc( (((100vw / 12) * 6 - 10px) / 4 ) * 3)

			@for $colLength from 1 through $client_col_length
				@each $size in $client_col_bp_list
					.hs-col.hs-col-#{$size}-#{$colLength}
						$colSize: ((100vw / 12) * $colLength)
						$gutterSize: (($client_col_length / $colLength) * $client_col_gutter) / ($client_col_length / $colLength)

						@if $size == 's'
							@media #{$media_bp_s}
								height: calc(#{$colSize} - #{$gutterSize})
						@if $size == 'm'
							@media #{$media_bp_m}
								height: calc(#{$colSize} - #{$gutterSize})
						@if $size == 'l'
							height: calc(#{$colSize} - #{$gutterSize})
							@media #{$media_bp_l}
								height: calc(#{$colSize} - #{$gutterSize})

@for $colLength from 0 through $client_col_length
	@each $size in $client_col_bp_list
		.hs-col-#{$size}-#{$colLength}
			@if $colLength == 0
				@if $size == 's'
					@media #{$media_bp_s}
						display: none
				@if $size == 'm'
					@media #{$media_bp_m}
						display: none
				@if $size == 'l'
					@media #{$media_bp_l}
						display: none
			@else
				$colSize: percentage($colLength / $client_col_length)
				// $gutterSize Berechnung
				// Anzahl der Zwischenr√§ume (($client_col_length/$colLength) - 1)
				// multipliziert mit Breite des Abstands ($client_col_gutter)
				// dividiert durch die Anzahl der Spalten ($client_col_length/$colLength)
				$gutterSize: (($client_col_length / $colLength - 1) * $client_col_gutter) / ($client_col_length / $colLength)
				@if $size == 's'
					@media #{$media_bp_s}
						width: calc(#{$colSize} - #{$gutterSize})
				@if $size == 'm'
					@media #{$media_bp_m}
						width: calc(#{$colSize} - #{$gutterSize})
				@if $size == 'l'
					width: calc(#{$colSize} - #{$gutterSize})
					@media #{$media_bp_l}
						width: calc(#{$colSize} - #{$gutterSize})
